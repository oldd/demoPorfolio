Project B:   Schematized calculator

Prompt:
	you're a clever accountant

Your project will contain these items:
	a schemadCalc object:
		properties:
			operations: an array or object that contains operation objects
			schema: a schema object used for validating new operation objects
		methods:
			addTo: 
				args: an operation object
				returns: a success or failure message
				behavior: uses 'schema' prop to validate new opObjects before adding them to 'operations' if they are valid.
			operate: 
				args: a string indicating the operation to be used, the numbers to be operated on
				returns: an array containing a success/failure message and the result of the operation.  if the operation was a failure, return 'undefined' as the result
				behavior: searches for an operation with the name passed in. 
					if it exists, execute the operation on the args. 
					if not, say so
			changeSchema:	
				args: a schema object
				returns: a success/failure message
				behavior: resets 'this.schema' to the argument.  I can't imagine why this would fail.

Usage example:
	**** later ****

Sample inputs and outputs: *operationSchema is defined in 'code'*
	********* later  *********

The exercises it combines:
	Fill this in once the exercises are made

	
Challenges: 
	if 'operate' is called with an operation name that doesn't exist, create a new one with that name and give it a default operation and args.
	prompt the user for new arguments if the wrong number of them was passed in.  then use the new arguments with the last operation called
