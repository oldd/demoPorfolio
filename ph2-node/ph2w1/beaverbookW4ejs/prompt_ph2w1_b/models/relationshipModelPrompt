(same as week 4 project.  reuse or refactor that)

RELMOD.JS:  all functionality connected to storing, accessing, modifying beavers
	RELATIONAHIP RECORD: object
		PROPERTIES:
			ID:  unique id for this record
			BEAVER1:  the id of the beaver to send the request
			BEAVER2:  the id of the beaver requested
			MESSAGES:  data structure storing the message history between these two beavers
			STATUS:  for example, boolean - indicating pending or responded to. (design this one to fit how you envision beavers classifying their relationships.  perhaps a string so 'its complicated' is an option)
	BEAVERSLIST:  an object 
		PROPERTIES:
			RELATIONS:  connection to mongoDB connection
		METHODS:
			CHANGESTATUS:
				ARGS: (depends on how you choose to use status)
				RETURNS:  success/not message
				BEHAVIOR:  accesses the status of the indicated record and change it
			ADDRELATION:
				ARGS: int, beaver id 1 and beaver id 2
				RETURNS: success/not message
				BEHAVIOR:  uses the arguments to create a new relationship object which is saved into 'relations' array.  status is set to default, messages data structure is initialized empty, and ID is generated
			ADDMESSAGE:
				ARGS: string, the new message.  int, the id of the relationship
				RETURNS:  success/not message
				BEHAVIOR:  adds the message to the message history and allerts of success or failure.
			DELETERELATION:
				ARGS: id of the relation to be deleted
				RETURNS: success/not message
				BEHAVIOR:  deletes the relationship and returns an alert


Usage Examples:

Sample Inputs and Outputs:  maybe not?